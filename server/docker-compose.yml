
version: '2'
services:
#    mongo:
#        image: "mongo:latest"
#        volumes:
#            - ./mongodb/db:/data/db
#        ports:
#            - "27017:27017"
    config-server:
        image: "galoat/config-service"
        container_name: config-server
        expose:
            - 8888
        ports:
           - 8888:8888
        restart: always

    discovery-server:
        image: "galoat/eurecka-service"
        container_name: discovery-server
        ports:
            - 8761:8761
        expose:
            - 8761
        links:
          - config-server
        depends_on:
          - config-server
        restart: always
        entrypoint: ["./wait-for-it.sh","config-server:8888","--timeout=60","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]

    personne-service:
      image: galoat/personne-service
      container_name: personne-service
      ports:
            - 8001:8001
      links:
        - discovery-server
        - config-server
      depends_on:
        - config-server
        - discovery-server
      expose:
        - 8001
      restart: always
      entrypoint: ["./wait-for-it.sh","discovery-server:8761","--timeout=60","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]


    personne-client:
      image: galoat/personne-client
      container_name: personne-client
      mem_limit: 256M
      ports:
          - 9999:9999
      links:
        - discovery-server
        - config-server
      depends_on:
        - config-server
        - discovery-server
      restart: always
      expose:
        - 9999
      entrypoint: ["./wait-for-it.sh","discovery-server:8761","--timeout=60","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]


    portainer:
        image:  portainer/portainer
        container_name: portainer
        expose:
          - 9000
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        ports:
          - 9000:9000
        restart: always
